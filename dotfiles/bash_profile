##############################################################################
# bash_profile
#
# Bash profile (.bash_profile, .bashrc, .profile, etc.).
# Sets up the shell the way I like it by performing the following actions:
# 1. Source scripts in the bash.d directory in the repo to perform most of the
#       configuration.
# 2. Add the scripts directory in the repo to the PATH.
# 3. Source scripts in ~/.bash.d directory to perform configuration local to
#       this machine.
##############################################################################

# Uncomment the next line to see a verbose listing of this script when it is running.
# set -x

# Get the path to this script.
function __get_script_dir() {
    local SOURCE="${BASH_SOURCE[0]}"
    # Resolve $SOURCE until the file is no longer a symlink.
    while [ -h "${SOURCE}" ]; do
        SCRIPT_DIR="$( SHELL_SESSION_FILE= && cd -P "$( dirname "${SOURCE}" )" && pwd )"
        SOURCE="$(readlink "${SOURCE}")"
        # If $SOURCE was a relative symlink, resolve it relative to the path where the symlink file was located.
        [[ ${SOURCE} != /* ]] && SOURCE="${SCRIPT_DIR}/${SOURCE}"
    done
    SCRIPT_DIR="$( SHELL_SESSION_FILE= && cd -P "$( dirname "${SOURCE}" )" && pwd )"
}

__get_script_dir

ROOT_DIR="$( SHELL_SESSION_FILE= && cd "$( dirname "${SCRIPT_DIR}" )" && pwd )"

# Source all the scripts in a folder.
#  $1 - Folder containing scripts to source.
function __source_files {
    for file in $1; do
        if [ -f "${file}" ]; then
            source "${file}"
        fi
    done
}

#-----------------------------------------------------------------------------
# Source common files.
#-----------------------------------------------------------------------------

if [ -d "${ROOT_DIR}/bash.d" ]; then
    __source_files "${ROOT_DIR}/bash.d/*"
fi

#-----------------------------------------------------------------------------
# Add the scripts directory to the path.
#-----------------------------------------------------------------------------

if [ -d "${ROOT_DIR}/scripts" ]; then
    addToPathIfExists "${ROOT_DIR}/scripts"
fi

#-----------------------------------------------------------------------------
# Source local files.
#-----------------------------------------------------------------------------

if [ -d "${HOME}/.bash.d" ]; then
    __source_files "${HOME}/.bash.d/*"
fi

# Clean up the environment.
unset __get_script_dir
unset __source_files
unset SCRIPT_DIR
unset ROOT_DIR
